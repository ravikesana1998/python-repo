trigger:
  branches:
    include:
      - main
  paths:
    include:
      - 'pipeline-folder/*'
      - 'scripts/*'

pool:
  name: 'agent-pool'

variables:
  swaggerUrl: 'https://python-web-app-1-bgape3c8aqahgjcn.centralindia-01.azurewebsites.net/openapi.json'
  fullSwagger: 'swagger-full.json'
  outputDir: 'split_swagger'
  resourceGroup: '02-05-rg'
  apimName: 'python-swagger'
  subscriptionId: '361d2915-ae3c-4eda-a472-cd1a9f5a25a9'
  appBaseUrl: 'https://python-web-app-1-bgape3c8aqahgjcn.centralindia-01.azurewebsites.net'
  
  # API IDs for each method
  apiGet: 'users-get'
  apiPost: 'users-post'
  apiPatch: 'users-patch'
  apiDelete: 'users-delete'

steps:
- task: UsePythonVersion@0
  displayName: 'Set up Python'
  inputs:
    versionSpec: '3.10'

- script: |
    echo "Upgrading pip..."
    python3 -m ensurepip --upgrade
    python3 -m pip install --upgrade pip
    echo "Installing required Python dependencies..."
    python3 -m pip install azure-identity cryptography
  displayName: 'Upgrade Pip and Install Dependencies'

- script: |
    echo "Downloading Swagger from $(swaggerUrl)"
    curl -sSL $(swaggerUrl) -o $(fullSwagger)
    echo "Downloaded Swagger file:"
    ls -l $(fullSwagger)
    echo "File content sample:"
    head -n 20 $(fullSwagger)
  displayName: 'Download Swagger'

- script: |
    echo "Splitting Swagger by method..."
    python3 scripts/split_swagger_by_method.py $(fullSwagger) --output-dir $(outputDir)
    echo "Split files created:"
    ls -l $(outputDir)
  displayName: 'Split Swagger by Method'

- script: |
    echo "Verifying contents of output directory $(outputDir):"
    if [ -d "$(outputDir)" ]; then
      ls -l $(outputDir)
    else
      echo "Output directory not found: $(outputDir)"
      exit 1
    fi
  displayName: 'Verify split_swagger directory'

# GET Operations
- script: |
    if [ ! -f "$(outputDir)/swagger-get.json" ]; then
      echo "Error: GET Swagger file not found at $(outputDir)/swagger-get.json"
      exit 1
    fi
    python3 scripts/sync_apim_operations.py \
      --subscription-id $(subscriptionId) \
      --resource-group $(resourceGroup) \
      --service-name $(apimName) \
      --spec-file $(outputDir)/swagger-get.json \
      --api-id $(apiGet)
  displayName: 'Sync GET Operations'

- task: AzureCLI@2
  displayName: 'Import GET API'
  inputs:
    azureSubscription: 'Azure Resource-service connectiom'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      az apim api import \
        --resource-group $(resourceGroup) \
        --service-name $(apimName) \
        --path users-get \
        --api-id $(apiGet) \
        --specification-format OpenApi \
        --specification-path $(outputDir)/swagger-get.json \
        --service-url "$(appBaseUrl)"
